{
  "format_version": "1.10.0",
  "minecraft:entity": {
    "description": {
      "identifier": "gaiawanderer:shark",
      "is_spawnable": true,
      "is_summonable": true,
      "is_experimental": false
    },

    "component_groups": {
      "status_easy": {
        "minecraft:attack": {
          "damage": 4
        },
        "minecraft:health": {
          "value": 30,
          "max": 30
        }
      },
      "status_hard": {
        "minecraft:attack": {
          "damage": 8
        },
        "minecraft:health": {
          "value": 60,
          "max": 60
        }
      },
      "fished": {
        "minecraft:spell_effects": {
          "add_effects": [
            {
              "effect": "levitation",
              "duration": 1,
              "amplifier": 20
            }
          ]
        }
      },
      "add_rider": {
        "minecraft:addrider": {
          "entity_type": "minecraft:drowned",
          "spawn_event": "minecraft:equipment_trident"
        }
      }
    },
    "components": {
      "minecraft:experience_reward": {
        "on_death": "query.last_hit_by_player ? 9 : 0"
      },
      "minecraft:type_family": {
        "family": [ "shark", "monster"]
      },
      "minecraft:collision_box": {
        "width": 1.2,
        "height": 0.7
      },
      "minecraft:health": {
        "value": 40,
        "max": 40
      },
      "minecraft:rideable": {
        "family_types": ["drowned"],
        "pull_in_entities": true,
        "seats": [
          {
            "position": [ 0.0, 0.8, 0.15 ]
          }
        ]
      },

      "minecraft:loot": {
        "table": "loot_tables/entities/shark.json"
      },
      "minecraft:scale": {
        "value": 2.0
      },

      "minecraft:breathable": {
        "totalSupply": 15,
        "suffocateTime": 0,
        "breathesAir": false,
        "breathesWater": true
      },

      "minecraft:attack": {
        "damage": 6
      },

      "minecraft:movement": {
        "value": 0.15
      },
      "minecraft:underwater_movement": {
        "value": 0.8
      },

      "minecraft:navigation.generic": { // Allows the mob to go through water
        "is_amphibious": false,
        "can_path_over_water": false,
        "can_swim": true,
        "can_walk": false,
        "can_breach": false,
        "can_sink": false
      },


      "minecraft:physics": {
      },
      "minecraft:movement.sway": {
        "sway_amplitude": 0.0
      },

      "minecraft:nameable": {
      },


      // shark Behaviors
      "minecraft:behavior.melee_attack": {
        "priority": 3,
        "reach_multiplier": 1.25,
        "speed_multiplier": 1.25
      },
      "minecraft:behavior.move_towards_restriction": {
        "priority": 5,
        "speed_multiplier": 1
      },
      "minecraft:behavior.random_stroll": {
        "priority": 6,
        "speed_multiplier": 1
      },
      "minecraft:behavior.look_at_player": {
        "priority": 7,
        "look_distance": 6,
        "probability": 0.02
      },
      "minecraft:behavior.random_look_around": {
        "priority": 7
      },
      "minecraft:behavior.hurt_by_target": {
        "entity_types": [
          {
            "filters": {
              "all_of": [
                {
                  "test": "is_family",
                  "subject": "other",
                  "operator": "!=",
                  "value": "snow_storm"
                }
              ]
            }
          }
        ]
      },

      "minecraft:behavior.nearest_attackable_target": {
        "priority": 2,
        "within_radius": 25,
        "reselect_targets": true,
        "entity_types": [
          {
            "filters": {
              "any_of": [
                { "test": "is_family", "subject": "other", "value": "player" },
                { "test": "is_family", "subject": "other", "value": "snowgolem" },
                { "test": "is_family", "subject": "other", "value": "irongolem" },
                { "test": "is_family", "subject": "other", "value": "villager" },
                { "test": "is_family", "subject": "other", "value": "bonefish" }
              ]
            },
            "max_dist": 16
          }
        ],
        "must_see": true,
        "must_see_forget_duration": 2.0
      },
      "minecraft:on_death": {
        "event": "death_event"
      }
    },
    "events": {
      "death_event": {
        "randomize": [
          {
            "weight": 99
          },
          {
            "weight": 1,
            "run_command": {
              "command": "structure load mystructure:book_shark ~ ~ ~"
            }
          }
        ]
      },
      "minecraft:entity_spawned": {
        "sequence": [
          {
            "filters": { "test": "is_difficulty", "value": "easy" },
            "add": {
              "component_groups": [
                "status_easy"
              ]
            }
          },
          {
            "filters": { "test": "is_difficulty", "value": "hard" },
            "add": {
              "component_groups": [
                "status_hard"
              ]
            }
          },
          {
            "randomize": [
              {
                "weight": 15,
                "remove": {
                },
                "add": {
                  "component_groups": [
                    "add_rider"
                  ]
                }
              },
              {
                "weight": 85,
                "remove": {
                },
                "add": {
                }
              }
            ]
          }
        ]
      },
      "minecraft:entity_transformed": {
        "sequence": [
          {
            "filters": { "test": "is_difficulty", "value": "easy" },
            "add": {
              "component_groups": [
                "status_easy"
              ]
            }
          },
          {
            "filters": { "test": "is_difficulty", "value": "hard" },
            "add": {
              "component_groups": [
                "status_hard"
              ]
            }
          },
          {
            "randomize": [
              {
                "weight": 15,
                "remove": {
                },
                "add": {
                  "component_groups": [
                    "add_rider"
                  ]
                }
              },
              {
                "weight": 85,
                "remove": {
                },
                "add": {
                }
              }
            ]
          },
          {
            "add": {
              "component_groups": ["fished"]
            }
          }
        ]
      }
    }
  }
}
